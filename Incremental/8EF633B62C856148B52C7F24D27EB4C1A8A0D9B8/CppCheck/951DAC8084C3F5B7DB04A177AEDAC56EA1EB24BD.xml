<?xml version="1.0" encoding="UTF-8"?><results version="2">    <cppcheck version="1.76.1"/>    <errors>        <error id="invalidPointerCast" severity="portability" msg="Casting between integer* and double* which have an incompatible binary data representation." verbose="Casting between integer* and double* which have an incompatible binary data representation." cwe="704">            <location file0="C:\dev\kicad-personal\lib_dxf\intern\dxfreader.cpp" file="C:\dev\kicad-personal\lib_dxf\intern\dxfreader.cpp" line="212"/>        </error>        <error id="noExplicitConstructor" severity="style" msg="Class &apos;dxfReader&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;dxfReader&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">            <location file0="C:\dev\kicad-personal\lib_dxf\intern\dxfreader.cpp" file="System32\dev\kicad-personal\lib_dxf\intern\dxfreader.h" line="21"/>        </error>        <error id="noExplicitConstructor" severity="style" msg="Class &apos;dxfReaderBinary&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;dxfReaderBinary&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">            <location file0="C:\dev\kicad-personal\lib_dxf\intern\dxfreader.cpp" file="System32\dev\kicad-personal\lib_dxf\intern\dxfreader.h" line="74"/>        </error>        <error id="noExplicitConstructor" severity="style" msg="Class &apos;dxfReaderAscii&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;dxfReaderAscii&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">            <location file0="C:\dev\kicad-personal\lib_dxf\intern\dxfreader.cpp" file="System32\dev\kicad-personal\lib_dxf\intern\dxfreader.h" line="89"/>        </error>        <error id="passedByValue" severity="performance" msg="Function parameter &apos;c&apos; should be passed by reference." verbose="Parameter &apos;c&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." cwe="398">            <location file0="C:\dev\kicad-personal\lib_dxf\intern\dxfreader.cpp" file="System32\dev\kicad-personal\lib_dxf\intern\drw_textcodec.h" line="22"/>        </error>        <error id="invalidScanfArgType_int" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int *&apos; but the argument type is &apos;signed int *&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int *&apos; but the argument type is &apos;signed int *&apos;." cwe="686">            <location file0="C:\dev\kicad-personal\lib_dxf\intern\dxfreader.cpp" file="C:\dev\kicad-personal\lib_dxf\intern\dxfreader.cpp" line="111"/>        </error>        <error id="unusedFunction" severity="style" msg="The function &apos;getHandleString&apos; is never used." verbose="The function &apos;getHandleString&apos; is never used." cwe="561">            <location file="C:\dev\kicad-personal\lib_dxf\intern\dxfreader.cpp" line="106"/>        </error>        <error id="unusedFunction" severity="style" msg="The function &apos;readRec&apos; is never used." verbose="The function &apos;readRec&apos; is never used." cwe="561">            <location file="C:\dev\kicad-personal\lib_dxf\intern\dxfreader.cpp" line="27"/>        </error>        <error id="unmatchedSuppression" severity="information" msg="Unmatched suppression: preprocessorErrorDirective" verbose="Unmatched suppression: preprocessorErrorDirective">            <location file="*" line="0"/>        </error>    </errors></results>